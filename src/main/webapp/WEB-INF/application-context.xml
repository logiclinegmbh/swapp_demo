<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context 
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/mvc ">


	<!-- use annotations, we dont want to write all these spring xml config 
		files -->
	<context:annotation-config />

	<!-- look here for our spring beans -->
	<context:component-scan base-package="de.logicline.swapp" />
	
	<!-- all db based apps need a transaction manager -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>


	<!-- you may use the default profile when running on your local machine -->
	<!-- make sure to edit configuration so that it suits your local environment -->
	<beans profile="default">

		<bean id="entityManagerFactory"
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="jpaVendorAdapter">
				<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
			</property>
			<property name="jpaProperties">
				<props>
					<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
					<prop key="hibernate.show_sql">true</prop>
					<prop key="hibernate.format_sql">true</prop>
					<prop key="hibernate.hbm2ddl.auto">update</prop>
					<prop key="hibernate.generate_ddl">true</prop>
					<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				</props>
			</property>
		</bean>

		<bean id="dataSource"
			class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="org.postgresql.Driver" />
			<property name="url" value="jdbc:postgresql://localhost:5432/myDatabase" />
			<!-- <property name="url" value="jdbc:postgresql://localhost:5432/myDatabase?ssl=true&amp;sslfactory=org.postgresql.ssl.NonValidatingFactory" 
				/> -->
			<property name="username" value="postgres" />
			<property name="password" value="admin" />
		</bean>

	</beans>



	<!-- the prod Profile is used when the app is deployed on heroku -->
	<!-- db credentials are extracted from the Heroku Env Variable "DATABASE_URL" -->
	<beans profile="prod">

		<bean class="java.net.URI" id="dbUrl">
			<constructor-arg value="#{systemEnvironment['DATABASE_URL']}" />
		</bean>

		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
			<property name="url"
				value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }" />
			<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }" />
			<property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }" />

			<property name="testOnBorrow" value="true" />
			<property name="validationQuery" value="SELECT 1" />
		</bean>

		<bean id="entityManagerFactory"
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="jpaVendorAdapter">
				<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
			</property>
			<property name="jpaProperties">
				<props>
					<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
					<prop key="hibernate.show_sql">true</prop>
					<!-- change this to 'verify' before running as a production app -->
					<prop key="hibernate.hbm2ddl.auto">update</prop>
					<prop key="hibernate.generate_ddl">true</prop>
					<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				</props>
			</property>
		</bean>
	</beans>
</beans>
